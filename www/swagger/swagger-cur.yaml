swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "WOSS Booking"
host: "api.booking.knine.xyz"
tags:
- name: "profile"
  description: "Personal information of current user"
- name: "properties"
  description: "API that manages properties"
- name: "comments"
  description: "API that manages comments of a property"
schemes:
- "https"
securityDefinitions:
  Customers:
    description: Customers
    type: oauth2
    flow: accessCode
    tokenUrl: https://booking-user-pool-domain-customer.auth.eu-central-1.amazoncognito.com/oauth2/token
    authorizationUrl: https://booking-user-pool-domain-customer.auth.eu-central-1.amazoncognito.com/oauth2/authorize?redirect_uri=https%3A%2F%2Flanding.booking.knine.xyz%2Fswagger%2Foauth2-redirect.html&client_id=5vpqdi2hlkvqjsjqd3gsama9c8&response_type=code
    scopes:
      profile: Basic profile data access
      email: Email data access
  Hosts:
    description: Hosts
    type: oauth2
    flow: accessCode
    tokenUrl: https://booking-user-pool-domain-host.auth.eu-central-1.amazoncognito.com/oauth2/token
    authorizationUrl: https://booking-user-pool-domain-host.auth.eu-central-1.amazoncognito.com/oauth2/authorize?redirect_uri=https%3A%2F%2Flanding.booking.knine.xyz%2Fswagger%2Foauth2-redirect.html&client_id=4o98dleg8r6uqi1g09ctoua1cg&response_type=code
    scopes:
      profile: Basic profile data access
      email: Email data access
paths:
  /customers/profile:
    get:
      tags:
      - "profile"
      security:
      - Customers: [email, profile]
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/CustomerProfileResponse"
    put:
      tags:
      - "profile"
      security:
      - Customers: [email, profile]
      parameters:
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
            avatarFileName:
              type: string
            avatarBase64:
              type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/CustomerProfileResponse"
            
  /hosts/profile:
    get:
      tags:
      - "profile"
      security:
      - Hosts: [email, profile]
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/HostProfileResponse"
    put:
      tags:
      - "profile"
      security:
      - Hosts: [email, profile]
      parameters:
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
            avatarFileName:
              type: string
            avatarBase64:
              type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/HostProfileResponse"

  /properties:
    get:
      tags:
      - "properties"
      responses:
        200:
          description: Success
          schema:
            type: array
            items: 
              $ref: "#/definitions/PropertyResponse"
    post:
      tags:
      - "properties"
      parameters:
      - in: body
        name: body
        schema: 
          $ref: '#/definitions/PropertyRequest'
      security:
        - Hosts: [email, profile]
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PropertyResponse'

  /properties/{id}:
    get:
      tags:
      - "properties"
      parameters:
      - in: path
        name: id
        type: string
        required: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PropertyResponse'
    put:
      tags:
      - "properties"
      parameters:
      - in: path
        name: id
        type: string
        required: true
      - in: body
        name: body
        schema: 
          $ref: '#/definitions/PropertyRequest'
      security:
        - Hosts: [email, profile]
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PropertyResponse'

  /properties/{id}/comments:
    get:
      tags:
      - "comments"
      parameters:
      - in: path
        name: id
        type: string
        required: true
      responses:
        200:
          description: Success
          schema:
            type: array
            items: 
              $ref: '#/definitions/CommentResponse'
    post:
      tags:
      - "comments"
      parameters:
      - in: path
        name: id
        type: string
        required: true
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            text:
              type: string
          required:
          - text
      security:
        - Customers: [email, profile]
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CommentResponse'

definitions:
  CustomerProfileResponse:
    type: "object"
    properties:
      id:
        type: "string"
      username:
        type: "string"
      email:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      avatarUrl:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"

  HostProfileResponse:
    type: "object"
    properties:
      id:
        type: "string"
      username:
        type: "string"
      email:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      avatarUrl:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"

  PropertyRequest:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      cover_image_file_name:
        type: "string"
      cover_image_base64:
        type: "string"
  PropertyResponse:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuidv4"
      name:
        type: "string"
      description:
        type: "string"
      created_date:
        type: "string"
        format: "date"
      cover_image_url:
        type: "string"

  CommentResponse:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuidv4"
      text:
        type: "string"
      propertyId:
        type: "string"
        format: "uuidv4"
      author:
        type: object
        properties:
          id:
            type: string
          firstName:
            type: string
          lastName:
            type: string
          avatarUrl:
            type: string
      moodType:
        description: "The mood of the comment determined by a ML algorithm"
        type: string
        enum: [negative, neutral, positive]
      createdDate:
        type: "string"
        format: "date-time"
